{"name":"clowder","tagline":"Utility for managing multiple git repositories","body":"> **clowder** - A group of cats\r\n\r\n> **herding cats** - An idiom that refers to a frustrating attempt to control or organize a class of entities which are uncontrollable or chaotic.\r\n\r\nManaging multiple repositories of dependent code can be pretty frustrating. There are a number of existing options:\r\n\r\n- [git submodules](https://git-scm.com/book/en/v2/Git-Tools-Submodules)\r\n- [subtree merging](https://git-scm.com/book/en/v1/Git-Tools-Subtree-Merging)\r\n- [Google's repo tool](https://code.google.com/p/git-repo/)\r\n- [git-submanage](https://github.com/idbrii/git-submanage)\r\n- [gr](https://github.com/mixu/gr)\r\n- [git-stree](https://github.com/tdd/git-stree)\r\n- [git-subrepo](https://github.com/ingydotnet/git-subrepo)\r\n\r\nAll of these have their own approach, but many are based on submodules or subtrees.\r\nGoogle's `repo` tool takes a different approach, but is closely tied to Google's development workflow.\r\n\r\n`clowder` uses a similar approach as `repo` but with a yaml file instead of xml.\r\nURL information and project locations on disk are specified in a `clowder.yaml` file.\r\nThis file is checked into its own repository, so the project structure's history is saved under version control.\r\nYou can `fix` specific versions with current commit hashes saved for later restoration.\r\n\r\nFor a couple example projects, see the [examples directory](https://github.com/JrGoodle/clowder/tree/master/examples).\r\n\r\n## Getting Started\r\n\r\nThis example is based on the LLVM project. See [the full clowder.yaml](https://github.com/JrGoodle/llvm-projects/blob/master/clowder.yaml).\r\n\r\nFirst create directory to contain all the projects.\r\n\r\n```bash\r\n$ mkdir llvm-projects\r\n$ cd llvm-projects\r\n```\r\n\r\nClone `clowder` repository containing `clowder.yaml` file.\r\n\r\n```bash\r\n$ clowder breed https://github.com/jrgoodle/llvm-projects.git\r\n```\r\n\r\nThis command will clone the [llvm-projects](https://github.com/jrgoodle/llvm-projects.git) repository in the `llvm-projects/clowder` directory and create a symlink at `llvm-projects/clowder.yaml`.\r\n\r\n```bash\r\n$ clowder herd\r\n```\r\n\r\nThis command syncs the projects. Projects are cloned if they don't currently exist. Otherwise, each project will pull the latest changes. If the current branch isn't the default, it'll be checked out, and latest changes pulled.\r\n\r\n```bash\r\n$ clowder groom # Update clowder repository\r\n```\r\n\r\nThis command is like `clowder herd`, but for syncing the `clowder` repository.\r\n\r\n### Further Commands\r\n\r\n```bash\r\n$ clowder meow # print status of projects\r\n```\r\n\r\n```bash\r\n$ clowder litter # Discard any changes in projects\r\n```\r\n\r\n```bash\r\n$ clowder stash # Stash any changes in projects\r\n```\r\n\r\n```bash\r\n$ clowder fix -v v0.1 # Fix new version of clowder.yaml\r\n```\r\n\r\n```bash\r\n$ clowder herd -v v0.1 # Check out fixed version\r\n```\r\n\r\n```bash\r\n$ clowder forall \"$COMMAND\" # Run \"$COMMAND\" in all project directories\r\n```\r\n\r\n## The `clowder.yaml` File\r\n\r\n### Defaults\r\n\r\nThe **defaults** specify the default branch and remote for projects, and groups to sync by default with `clowder herd`.\r\n\r\n```yaml\r\ndefaults:\r\n    ref: refs/heads/master\r\n    remote: github\r\n```\r\n\r\n### Remotes\r\n\r\nMultiple **remotes** can be specified for use with different projects.\r\n\r\n```yaml\r\nremotes:\r\n    - name: github-ssh\r\n      url: ssh://git@github.com\r\n    - name: github\r\n      url: https://github.com\r\n```\r\n\r\n### Groups and Projects\r\n\r\n**Groups** have a name and associated projects.\r\nAt a minimum, **Projects** need the `name` from the project's url, and the `path` to clone relative to the root directory.\r\nThe default `remote` and `ref` values can also be overridden on a per-project basis.\r\n\r\n```yaml\r\ngroups:\r\n    - name: clang\r\n      projects:\r\n        - name: llvm-mirror/clang\r\n          path: llvm/tools/clang\r\n        - name: llvm-mirror/clang-tools-extra\r\n          path: llvm/tools/clang/tools/extra\r\n    - name: llvm\r\n      projects:\r\n        - name: llvm-mirror/llvm\r\n          path: llvm\r\n```\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}